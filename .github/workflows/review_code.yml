name: Review code

on:
  pull_request:
    types: [opened, reopened, synchronize]

env:
  DANGER_GITHUB_API_TOKEN: ${{ github.token }}

jobs:
  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v2.3.4

      - name: Set env BRANCH_TAG
        uses: nimblehq/branch-tag-action@v1.2

      - name: Login to Docker registry
        uses: docker/login-action@v1.6.0
        with:
          registry: ${{ env.DOCKER_REGISTRY_HOST }}
          username: ${{ env.DOCKER_REGISTRY_USERNAME }}
          password: ${{ env.DOCKER_REGISTRY_TOKEN }}

      - name: Pull Docker image
        if: ${{ env.BRANCH_TAG != 'latest' && env.BRANCH_TAG != 'development' }}
        run: docker-compose pull test || true

      - name: Build Docker image
        run: bin/docker-prepare && docker-compose build

      - name: Push Docker image
        run: docker-compose push test

  automated_code_review:
    name: Run Danger
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Set env BRANCH_TAG
        uses: nimblehq/branch-tag-action@v1.2

      - name: Login to Docker registry
        uses: docker/login-action@v1.6.0
        with:
          fetch-depth: 0
          registry: ${{ env.DOCKER_REGISTRY_HOST }}
          username: ${{ env.DOCKER_REGISTRY_USERNAME }}
          password: ${{ env.DOCKER_REGISTRY_TOKEN }}

      - name: Pull Docker image
        run: docker-compose pull test || true

      - name: Run tests
        run: docker-compose run test bundle exec rspec --profile

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: docker-compose run test echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Yarn
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache Node modules
        id: node-modules-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-nodemodules-

      - name: Yarn install
        if: steps.yarn-cache.outputs.cache-hit != 'true' || steps.node-modules-cache.outputs.cache-hit != 'true'
        run: docker-compose run test yarn

      - name: Run Undercover
        run: docker-compose run test bundle exec undercover-report -c origin/develop --lcov coverage/lcov/*.lcov

      - name: Run Danger
        run: docker-compose run test bundle exec danger
